echo "# BingoNumberGenerator" >> README.md
git init
git add index.html
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/chrisbrowncbhllc-cmd/BingoNumberGenerator.git
git push -u origin main

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Unique Card Generator</title>
  <style>
    body {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      background: #1e1e2f;
      color: white;
      height: 100vh;
      margin: 0;
      font-family: Arial, sans-serif;
    }

    .card-container {
      perspective: 1000px;
      margin-bottom: 20px;
    }

    .card {
      width: 200px;
      height: 300px;
      position: relative;
      transform-style: preserve-3d;
      transition: transform 0.8s ease-in-out;
      cursor: pointer;
    }

    .card.shuffling {
      animation: shake 0.4s;
    }

    @keyframes shake {
      0% { transform: rotateY(0deg) translateX(0); }
      25% { transform: rotateY(0deg) translateX(-10px); }
      50% { transform: rotateY(0deg) translateX(10px); }
      75% { transform: rotateY(0deg) translateX(-10px); }
      100% { transform: rotateY(0deg) translateX(0); }
    }

    .card.flipped {
      transform: rotateY(180deg);
    }

    .card-face {
      position: absolute;
      width: 100%;
      height: 100%;
      backface-visibility: hidden;
      border-radius: 10px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 5em;
      font-weight: bold;
    }

    .card-back {
      background: #444;
      color: white;
    }

    .card-front {
      background: white;
      color: black;
      transform: rotateY(180deg);
    }

    .button-row {
      display: flex;
      gap: 10px;
      margin-bottom: 15px;
    }

    button {
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
    }

    .history {
      max-height: 150px;
      overflow-y: auto;
      width: 220px;
      background: rgba(255,255,255,0.05);
      padding: 10px;
      border-radius: 5px;
      font-size: 14px;
    }

    .history-title {
      font-weight: bold;
      margin-bottom: 5px;
      text-align: center;
    }
  </style>
</head>
<body>

  <div class="card-container">
    <div class="card" id="card">
      <div class="card-face card-back">ðŸ‚ </div>
      <div class="card-face card-front" id="card-number">?</div>
    </div>
  </div>

  <div class="button-row">
    <button id="draw-btn" onclick="drawCard()">Draw Card</button>
    <button onclick="resetDeck()">RESET</button>
  </div>

  <div class="history">
    <div class="history-title">History</div>
    <div id="history-log"></div>
  </div>

  <!-- Sound Effect -->
  <audio id="flip-sound" src="https://www.soundjay.com/misc/sounds/card-flip-1.mp3" preload="auto"></audio>

  <script>
    const card = document.getElementById('card');
    const cardNumber = document.getElementById('card-number');
    const drawBtn = document.getElementById('draw-btn');
    const historyLog = document.getElementById('history-log');
    const flipSound = document.getElementById('flip-sound');

    let deck = [];
    let history = [];

    function initDeck() {
      deck = Array.from({ length: 25 }, (_, i) => i + 1); // [1, 2, ..., 25]
      history = [];
      renderHistory();
      drawBtn.disabled = false;
      card.classList.remove('flipped');
      cardNumber.textContent = '?';
    }

    function drawCard() {
      if (deck.length === 0) return;

      // Shuffle animation + sound
      card.classList.remove('flipped');
      card.classList.add('shuffling');
      flipSound.currentTime = 0;
      flipSound.play();

      setTimeout(() => {
        const index = Math.floor(Math.random() * deck.length);
        const number = deck.splice(index, 1)[0]; // remove from deck
        history.unshift(number); // add to history
        cardNumber.textContent = number;
        card.classList.remove('shuffling');
        card.classList.add('flipped');
        renderHistory();

        if (deck.length === 0) {
          drawBtn.disabled = true;
          alert('All 25 cards have been drawn!');
        }
      }, 500);
    }

    function renderHistory() {
      historyLog.innerHTML = history.map(n => `Card: ${n}`).join('<br>');
    }

    function resetDeck() {
      initDeck();
    }

    // Initialize on load
    initDeck();
  </script>

</body>
</html>
git push -u origin main



